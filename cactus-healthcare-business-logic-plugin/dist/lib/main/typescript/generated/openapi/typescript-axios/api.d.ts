/**
 * Hyperledger Cactus Example - Supply Chain App
 * Demonstrates how a business use case can be satisfied with Cactus when multiple distinct ledgers are involved.
 *
 * The version of the OpenAPI document: v2.0.0-alpha.2
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import type { Configuration } from './configuration';
import type { AxiosPromise, AxiosInstance, AxiosRequestConfig } from 'axios';
import type { RequestArgs } from './base';
import { BaseAPI } from './base';
/**
 *
 * @export
 * @interface BambooHarvest
 */
export interface BambooHarvest {
    /**
     *
     * @type {string}
     * @memberof BambooHarvest
     */
    'id': string;
    /**
     *
     * @type {string}
     * @memberof BambooHarvest
     */
    'location': string;
    /**
     *
     * @type {string}
     * @memberof BambooHarvest
     */
    'startedAt': string;
    /**
     *
     * @type {string}
     * @memberof BambooHarvest
     */
    'endedAt': string;
    /**
     *
     * @type {string}
     * @memberof BambooHarvest
     */
    'harvester': string;
}
/**
 *
 * @export
 * @interface Bookshelf
 */
export interface Bookshelf {
    /**
     *
     * @type {string}
     * @memberof Bookshelf
     */
    'id': string;
    /**
     * The number of shelves the bookshelf comes with.
     * @type {number}
     * @memberof Bookshelf
     */
    'shelfCount': number;
    /**
     * The foreign key ID referencing the bamboo harvest that yielded the wood material for the construction of the bookshelf.
     * @type {string}
     * @memberof Bookshelf
     */
    'bambooHarvestId': string;
}
/**
 *
 * @export
 * @interface Shipment
 */
export interface Shipment {
    /**
     *
     * @type {string}
     * @memberof Shipment
     */
    'id': string;
    /**
     * The foreign key ID referencing the bookshelfId that will go in the shipment.
     * @type {string}
     * @memberof Shipment
     */
    'bookshelfId': string;
}
/**
 *
 * @export
 * @interface InsertBambooHarvestRequest
 */
export interface InsertBambooHarvestRequest {
    /**
     *
     * @type {BambooHarvest}
     * @memberof InsertBambooHarvestRequest
     */
    'bambooHarvest': BambooHarvest;
}
/**
 *
 * @export
 * @interface InsertBambooHarvestResponse
 */
export interface InsertBambooHarvestResponse {
    /**
     *
     * @type {{ [key: string]: any; }}
     * @memberof InsertBambooHarvestResponse
     */
    'callOutput'?: {
        [key: string]: any;
    };
    /**
     *
     * @type {{ [key: string]: any; }}
     * @memberof InsertBambooHarvestResponse
     */
    'transactionReceipt'?: {
        [key: string]: any;
    };
}
/**
 *
 * @export
 * @interface InsertBookshelfRequest
 */
export interface InsertBookshelfRequest {
    /**
     *
     * @type {Bookshelf}
     * @memberof InsertBookshelfRequest
     */
    'bookshelf': Bookshelf;
}
/**
 *
 * @export
 * @interface InsertBookshelfResponse
 */
export interface InsertBookshelfResponse {
    /**
     *
     * @type {{ [key: string]: any; }}
     * @memberof InsertBookshelfResponse
     */
    'callOutput'?: {
        [key: string]: any;
    };
    /**
     *
     * @type {{ [key: string]: any; }}
     * @memberof InsertBookshelfResponse
     */
    'transactionReceipt'?: {
        [key: string]: any;
    };
}
/**
 *
 * @export
 * @interface InsertShipmentRequest
 */
export interface InsertShipmentRequest {
    /**
     *
     * @type {Shipment}
     * @memberof InsertShipmentRequest
     */
    'shipment': Shipment;
}
/**
 *
 * @export
 * @interface InsertShipmentResponse
 */
export interface InsertShipmentResponse {
    /**
     *
     * @type {{ [key: string]: any; }}
     * @memberof InsertShipmentResponse
     */
    'callOutput'?: {
        [key: string]: any;
    };
    /**
     *
     * @type {{ [key: string]: any; }}
     * @memberof InsertShipmentResponse
     */
    'transactionReceipt'?: {
        [key: string]: any;
    };
}
/**
 *
 * @export
 * @interface ListBambooHarvestResponse
 */
export interface ListBambooHarvestResponse {
    /**
     *
     * @type {Array<BambooHarvest>}
     * @memberof ListBambooHarvestResponse
     */
    'data': Array<BambooHarvest>;
}
/**
 *
 * @export
 * @interface ListBookshelfResponse
 */
export interface ListBookshelfResponse {
    /**
     *
     * @type {Array<Bookshelf>}
     * @memberof ListBookshelfResponse
     */
    'data': Array<Bookshelf>;
}
/**
 *
 * @export
 * @interface ListShipmentResponse
 */
export interface ListShipmentResponse {
    /**
     *
     * @type {Array<Shipment>}
     * @memberof ListShipmentResponse
     */
    'data': Array<Shipment>;
}
/**
 * DefaultApi - axios parameter creator
 * @export
 */
export declare const DefaultApiAxiosParamCreator: (configuration?: Configuration) => {
    /**
     *
     * @summary Inserts the provided BambooHarvest entity to the ledger.
     * @param {InsertBambooHarvestRequest} [insertBambooHarvestRequest]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    insertBambooHarvestV1: (insertBambooHarvestRequest?: InsertBambooHarvestRequest, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @summary Inserts the provided Bookshelf entity to the ledger.
     * @param {InsertBookshelfRequest} [insertBookshelfRequest]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    insertBookshelfV1: (insertBookshelfRequest?: InsertBookshelfRequest, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @summary Inserts the provided Shipment entity to the ledger.
     * @param {InsertShipmentRequest} [insertShipmentRequest]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    insertShipmentV1: (insertShipmentRequest?: InsertShipmentRequest, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @summary Lists all the BambooHarvest entities stored on the ledger.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    listBambooHarvestV1: (options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @summary Lists all the Bookshelf entities stored on the ledger.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    listBookshelfV1: (options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @summary Lists all the Shipments entities stored on the ledger.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    listShipmentV1: (options?: AxiosRequestConfig) => Promise<RequestArgs>;
};
/**
 * DefaultApi - functional programming interface
 * @export
 */
export declare const DefaultApiFp: (configuration?: Configuration) => {
    /**
     *
     * @summary Inserts the provided BambooHarvest entity to the ledger.
     * @param {InsertBambooHarvestRequest} [insertBambooHarvestRequest]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    insertBambooHarvestV1(insertBambooHarvestRequest?: InsertBambooHarvestRequest, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<InsertBambooHarvestResponse>>;
    /**
     *
     * @summary Inserts the provided Bookshelf entity to the ledger.
     * @param {InsertBookshelfRequest} [insertBookshelfRequest]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    insertBookshelfV1(insertBookshelfRequest?: InsertBookshelfRequest, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<InsertBookshelfResponse>>;
    /**
     *
     * @summary Inserts the provided Shipment entity to the ledger.
     * @param {InsertShipmentRequest} [insertShipmentRequest]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    insertShipmentV1(insertShipmentRequest?: InsertShipmentRequest, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<InsertShipmentResponse>>;
    /**
     *
     * @summary Lists all the BambooHarvest entities stored on the ledger.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    listBambooHarvestV1(options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<ListBambooHarvestResponse>>;
    /**
     *
     * @summary Lists all the Bookshelf entities stored on the ledger.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    listBookshelfV1(options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<ListBookshelfResponse>>;
    /**
     *
     * @summary Lists all the Shipments entities stored on the ledger.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    listShipmentV1(options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<ListShipmentResponse>>;
};
/**
 * DefaultApi - factory interface
 * @export
 */
export declare const DefaultApiFactory: (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) => {
    /**
     *
     * @summary Inserts the provided BambooHarvest entity to the ledger.
     * @param {InsertBambooHarvestRequest} [insertBambooHarvestRequest]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    insertBambooHarvestV1(insertBambooHarvestRequest?: InsertBambooHarvestRequest, options?: any): AxiosPromise<InsertBambooHarvestResponse>;
    /**
     *
     * @summary Inserts the provided Bookshelf entity to the ledger.
     * @param {InsertBookshelfRequest} [insertBookshelfRequest]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    insertBookshelfV1(insertBookshelfRequest?: InsertBookshelfRequest, options?: any): AxiosPromise<InsertBookshelfResponse>;
    /**
     *
     * @summary Inserts the provided Shipment entity to the ledger.
     * @param {InsertShipmentRequest} [insertShipmentRequest]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    insertShipmentV1(insertShipmentRequest?: InsertShipmentRequest, options?: any): AxiosPromise<InsertShipmentResponse>;
    /**
     *
     * @summary Lists all the BambooHarvest entities stored on the ledger.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    listBambooHarvestV1(options?: any): AxiosPromise<ListBambooHarvestResponse>;
    /**
     *
     * @summary Lists all the Bookshelf entities stored on the ledger.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    listBookshelfV1(options?: any): AxiosPromise<ListBookshelfResponse>;
    /**
     *
     * @summary Lists all the Shipments entities stored on the ledger.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    listShipmentV1(options?: any): AxiosPromise<ListShipmentResponse>;
};
/**
 * DefaultApi - object-oriented interface
 * @export
 * @class DefaultApi
 * @extends {BaseAPI}
 */
export declare class DefaultApi extends BaseAPI {
    /**
     *
     * @summary Inserts the provided BambooHarvest entity to the ledger.
     * @param {InsertBambooHarvestRequest} [insertBambooHarvestRequest]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof DefaultApi
     */
    insertBambooHarvestV1(insertBambooHarvestRequest?: InsertBambooHarvestRequest, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<InsertBambooHarvestResponse, any>>;
    /**
     *
     * @summary Inserts the provided Bookshelf entity to the ledger.
     * @param {InsertBookshelfRequest} [insertBookshelfRequest]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof DefaultApi
     */
    insertBookshelfV1(insertBookshelfRequest?: InsertBookshelfRequest, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<InsertBookshelfResponse, any>>;
    /**
     *
     * @summary Inserts the provided Shipment entity to the ledger.
     * @param {InsertShipmentRequest} [insertShipmentRequest]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof DefaultApi
     */
    insertShipmentV1(insertShipmentRequest?: InsertShipmentRequest, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<InsertShipmentResponse, any>>;
    /**
     *
     * @summary Lists all the BambooHarvest entities stored on the ledger.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof DefaultApi
     */
    listBambooHarvestV1(options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<ListBambooHarvestResponse, any>>;
    /**
     *
     * @summary Lists all the Bookshelf entities stored on the ledger.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof DefaultApi
     */
    listBookshelfV1(options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<ListBookshelfResponse, any>>;
    /**
     *
     * @summary Lists all the Shipments entities stored on the ledger.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof DefaultApi
     */
    listShipmentV1(options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<ListShipmentResponse, any>>;
}
