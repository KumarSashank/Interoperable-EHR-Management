/**
 * Hyperledger Cactus Example - Health Care EHR App
 * Demonstrates EHR management across multiple distinct Hyperledger Fabric ledgers.
 *
 * The version of the OpenAPI document: v2.0.0-alpha.2
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import type { Configuration } from './configuration';
import type { AxiosPromise, AxiosInstance, AxiosRequestConfig } from 'axios';
import type { RequestArgs } from './base';
import { BaseAPI } from './base';
/**
 *
 * @export
 * @interface HospitalNetworkA
 */
export interface HospitalNetworkA {
    /**
     *
     * @type {string}
     * @memberof HospitalNetworkA
     */
    'id': string;
    /**
     * The foreign key ID referencing the corresponding entry in HospitalNetworkB.
     * @type {string}
     * @memberof HospitalNetworkA
     */
    'HIdB': string;
}
/**
 *
 * @export
 * @interface HospitalNetworkB
 */
export interface HospitalNetworkB {
    /**
     *
     * @type {string}
     * @memberof HospitalNetworkB
     */
    'id': string;
}
/**
 *
 * @export
 * @interface InsertDataRequest
 */
export interface InsertDataRequest {
    /**
     *
     * @type {HospitalNetworkA}
     * @memberof InsertDataRequest
     */
    'data': HospitalNetworkA;
}
/**
 *
 * @export
 * @interface InsertDataResponseHSPA
 */
export interface InsertDataResponseHSPA {
    /**
     *
     * @type {{ [key: string]: any; }}
     * @memberof InsertDataResponseHSPA
     */
    'callOutput'?: {
        [key: string]: any;
    };
    /**
     *
     * @type {{ [key: string]: any; }}
     * @memberof InsertDataResponseHSPA
     */
    'transactionReceipt'?: {
        [key: string]: any;
    };
}
/**
 *
 * @export
 * @interface ListHSPAResponse
 */
export interface ListHSPAResponse {
    /**
     *
     * @type {Array<HospitalNetworkA>}
     * @memberof ListHSPAResponse
     */
    'data': Array<HospitalNetworkA>;
}
/**
 *
 * @export
 * @interface ListHSPBResponse
 */
export interface ListHSPBResponse {
    /**
     *
     * @type {Array<HospitalNetworkB>}
     * @memberof ListHSPBResponse
     */
    'data': Array<HospitalNetworkB>;
}
/**
 * DefaultApi - axios parameter creator
 * @export
 */
export declare const DefaultApiAxiosParamCreator: (configuration?: Configuration) => {
    /**
     *
     * @summary Inserts the provided data entity to the ledger.
     * @param {InsertDataRequest} [insertDataRequest]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    insertDataRequestV1: (insertDataRequest?: InsertDataRequest, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @summary Lists all the Data entities stored on the ledger.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    listDataV1: (options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @summary Lists all the BambooHarvest entities stored on the ledger.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    listHSPBResponseV1: (options?: AxiosRequestConfig) => Promise<RequestArgs>;
};
/**
 * DefaultApi - functional programming interface
 * @export
 */
export declare const DefaultApiFp: (configuration?: Configuration) => {
    /**
     *
     * @summary Inserts the provided data entity to the ledger.
     * @param {InsertDataRequest} [insertDataRequest]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    insertDataRequestV1(insertDataRequest?: InsertDataRequest, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<InsertDataResponseHSPA>>;
    /**
     *
     * @summary Lists all the Data entities stored on the ledger.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    listDataV1(options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<ListHSPAResponse>>;
    /**
     *
     * @summary Lists all the BambooHarvest entities stored on the ledger.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    listHSPBResponseV1(options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<ListHSPBResponse>>;
};
/**
 * DefaultApi - factory interface
 * @export
 */
export declare const DefaultApiFactory: (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) => {
    /**
     *
     * @summary Inserts the provided data entity to the ledger.
     * @param {InsertDataRequest} [insertDataRequest]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    insertDataRequestV1(insertDataRequest?: InsertDataRequest, options?: any): AxiosPromise<InsertDataResponseHSPA>;
    /**
     *
     * @summary Lists all the Data entities stored on the ledger.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    listDataV1(options?: any): AxiosPromise<ListHSPAResponse>;
    /**
     *
     * @summary Lists all the BambooHarvest entities stored on the ledger.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    listHSPBResponseV1(options?: any): AxiosPromise<ListHSPBResponse>;
};
/**
 * DefaultApi - object-oriented interface
 * @export
 * @class DefaultApi
 * @extends {BaseAPI}
 */
export declare class DefaultApi extends BaseAPI {
    /**
     *
     * @summary Inserts the provided data entity to the ledger.
     * @param {InsertDataRequest} [insertDataRequest]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof DefaultApi
     */
    insertDataRequestV1(insertDataRequest?: InsertDataRequest, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<InsertDataResponseHSPA, any>>;
    /**
     *
     * @summary Lists all the Data entities stored on the ledger.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof DefaultApi
     */
    listDataV1(options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<ListHSPAResponse, any>>;
    /**
     *
     * @summary Lists all the BambooHarvest entities stored on the ledger.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof DefaultApi
     */
    listHSPBResponseV1(options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<ListHSPBResponse, any>>;
}
